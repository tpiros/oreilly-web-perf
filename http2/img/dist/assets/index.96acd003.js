const d=function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))s(e);new MutationObserver(e=>{for(const r of e)if(r.type==="childList")for(const i of r.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&s(i)}).observe(document,{childList:!0,subtree:!0});function o(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerpolicy&&(r.referrerPolicy=e.referrerpolicy),e.crossorigin==="use-credentials"?r.credentials="include":e.crossorigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(e){if(e.ep)return;e.ep=!0;const r=o(e);fetch(e.href,r)}};d();const a=()=>{let t=1,n="";do n+=`<img style="padding: 1px 2px 1px 2px; width: 53px; height: 40px" src='imgs/image_part_${String(t).padStart(3,"0")}.jpg' />`,t++;while(t<=225);return n};document.querySelector("#app").innerHTML=`
<h1>Requested via ${performance.getEntriesByName(window.location)[0].nextHopProtocol}</h1>
<h1 id="done"></h1>
<h2>Duration: <span id="duration">Measuring ...</span></h2>
<div style="width: 860px;">${a()}</div>`;const c={duration:"Measuring..."},u=new Proxy(c,{get:function(t){return console.log("proxy get",t),t},set:function(t,n,o){return t[n]=o,this.updateDom(o),!0},updateDom:function(t){document.getElementById("duration").innerHTML=`${t} ms`}}),l=new PerformanceObserver(function(t,n){const o=t.getEntries();u.duration=`${Math.ceil(o[0].duration)}`});l.observe({entryTypes:["navigation"]});
